#include <curses.h>
#include <signal.h>
#include "bounce.h"

struct ppball the_ball;

void set_up();
void wrap_up();

int main()
{
     int c;
     set_up();

     while ((c = getchar()) != 'q')
     {
	  if (c == 'f') the_ball.x_ttm --;
	  else if (c == 's') the_ball.x_ttm ++;
	  else if (c == 'F') the_ball.y_ttm --;
	  else if (c == 'S') the_ball.y_ttm ++;
     }

     wrap_up();
}

void set_up()
{
     void ball_move(int);
     the_ball.y_pos = Y_INIT;
     the_ball.x_pos = X_INIT;
     the_ball.y_ttg = the_ball.y_ttm = Y_TTM;
     the_ball.x_ttg = the_ball.x_ttm = X_TIM;
     the_ball.y_dir = 1;
     the_ball.x_dir = 1;
     the_ball.symbol = DFL_SYMBOL;

     initscr();
     noecho();
     cbreak();

     signal(SIGINT, SIG_IGN);
     mvaddch(the_ball.y_pos, the_ball.x_pos, the_ball.symbol);
     refresh();

     signal(SIGALRM, ball_move);
     set_ticker(1000/TICKS_PER_SEC);
}

void wrap_up()
{
     set_ticker(0);
     endwin();
}

void ball_move(int signum)
{
     int y_cur, x_cur, moved;

     signal(SIGALRM, SIG_IGN);
     y_cur = the_ball.y_pos;
     x_cur = the_ball.x_pos;
     moved = 0;

     if (the_ball.x_ttm > 0 && the_ball.x_ttg-- == 1)
     {
	  the_ball.y_pos += the_ball.y_dir;
	  the_ball.y_ttg = the_ball.y_ttm;
	  moved = 1;
     }
